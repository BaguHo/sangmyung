각 코드의 장단점을 파악할 수 있어야한다.

- 행렬 
row, colum

- 행렬의 사칙연산
	- 행렬의 곱
	   ex) A4*7 * B7*3 = E4*3

1. 행렬저장하기
2. 꺼내서 계산하기, 사칙연산하기
// 행렬 모든 사칙연산을 하는 함수 만들기

배열을 이용하여 행렬을 표현하는 2가지 방법
1. 2차원 배열을 이용하여 배열 전체를 저장하는 방법
2. 0이 아닌 요소들만 저장하는 방법

- 희소행렬
    대부분의 항이 0인 행렬
// 희소행렬에서 0이 아닌 요소들만 저장하는 함수 만들어보기
// 전치행렬을 구하는 함수 만들기
// 원래 행렬 출력 후 전치행렬 출력

행 열 값 으로 희소행렬을 저장 + 오름차순(행, 열, 값 순서)으로 정렬

- 정렬된 행 열 값 행렬에서 열을 0 채우고 , 1채우고 ... 이러면 정렬하기 편해진다.

// DP로 전치행렬 정렬을 할 수 있지않을까??

=================================
STACK
1. LIFO (후입선출)
2. 선형적이다.

스택 사용 예) 시스템 스택을 이용한 함수호출
함수가 스택에 쌓이는 순서를 잘 이해하고 있어야한다.

ADT
 - void push(Stack s, Data data)
 - int pop(Stack s)
 - int is_empty(Stack s)
 - int is_full(Stack s)
 - void init_stack(Stack s)
 - int peek(Stack s)

배열로 구현한 배열

// 화요일 2시간 이내 끝나는 중간고사 













