typedef struct {
	int row;
	int col;
	int value;
} element;


typedef struct SparseMatrix {
	element data[MAX_TERMS];
	int rows;	// 행의 개수
	int cols;	// 열의 개수
	int terms; 	// 항의 개수
} SparseMatrix;


int a[8][10] = { { 0, 0, 0, 0, 2, 0, 0, 0, 0, 0 },
                         { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
                         { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                         { 0, 0, 0, 0, 0, 0, 0,-3, 0, 0 },
                         { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                         { 0,-1, 0, 0, 0, 0, 0, 0, 0, 0 },
                         { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                         { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }};

int b[8][10] = { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                         { 0, 0, 0,-1, 0, 0, 0, 0, 0, 0 },
                         { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                         { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                         { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                         { 0, 0, 0, 0, 2, 0, 0, 0, 0, 0 },
                         { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                         { 0, 0, 0, 0, 0, 0, 2, 0, 0, 0 }};

int c[8][10] = { { 0, 0, 0, 0,-2, 0, 0, 0, 0, 0 },
                         { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
                         { 0, 0, 0, 0, 0, 0, 0, 0, 0, 3 },
                         { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                         { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                         { 0, 0, 0, 0,-2, 0, 0, 0, 0, 0 },
                         { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                         { 0, 0, 0, 0, 0, 0, 4, 0, 0, 0 }};

(1) 이차원 배열에 저장된 희소행렬을 SparseMatrix 구조로 저장하는 함수
(2) 두 개의 SparseMatrix를 매개변수로 받아서 덧셈한 결과로 SparseMatrix를 반환하는 함수
(3) SparseMatrix에 저장된 내용을 0을 포함한 이차원 형렬 형태로 출력하는 함수

// main()에서 테스트하기
// 위 배열 a[][], b[][], c[][]를 (1)을 이용하여 각각 SparseMatrix A, B, C로 변환하기
// A+B를 (2)로 계산하고,반환된 결과 SparseMatrix를 (3)을 이용하여 출력하기
// A+C를 (2)로 계산하여 반환된 결과 SparseMatrix를 (3)을 이용하여 출력하기
// B+C를 (2)로 계산하여 반환된 결과 SparseMatrix를 (3)을 이용하여 출력하기


