우선순위 큐
구현방법
1. 배열
2. 연결리스트
3. heap

 heap의 조건
 - 완전이진트리 
 - 특별한 조건 (데이터들의 관계)
  1. 최대힙 (자식 <= 부모)
	Left Child <= 부모  >= Right Child
  2. 최소힙(자식 >= 부모)
	Left Child >= 부모 <= Right Child

**윗 레벨의 모든 값이 아래 레벨의 모든 값보다 큰 것은 아니다**

**힙의 높이**
n개의 노드를 가진 heap의 높이 = log(n)

heap을 사용하는 이유
-> 배열, 연결리스트를 사용하면 n ~ n^2의 시간복잡도를 가진다. 
하지만 heap을 사용하면 log n의 시간복잡도를 가지기 때문에
heap이 유리하다

이진탐색트리와는 다르다. 
이진탐색트리에서 최선의 경우가 heap이다

마지막 레벨을 제외하고는 각 레벨 i에 2^(i-1)게의 노드 존재

**힙의 구현**
배열로 구현(idx를 사용)

 - ADT
삽입
삭제
print

촤대 힙에서의 삭제는 가장 큰 키 값의 삭제를 의미
-> 루트노드 삭제
-> 마지막 노드를 루트 노드로
-> 자식 값과 비교 후 자기 위치 찾아가기

할 일
1. 데이터 구조 우선순위 큐 1.5h
2. 웹프 중간이후 과제 제출 1h
3. 컴퓨터 구조 2h 
컴구, 수학과 문명, 인간과 시간, 객체, 데구










 
